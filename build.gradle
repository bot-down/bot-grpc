
apply plugin: 'java'
apply plugin: 'application'

apply plugin: 'com.google.protobuf'

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
    // gradle versions
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
  }
}

targetCompatibility = 1.8
sourceCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

mainClassName = 'org.monolith.grpc.Application'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {

    compile 'io.grpc:grpc-netty:1.2.0'
    compile 'io.grpc:grpc-protobuf:1.2.0'
    compile 'io.grpc:grpc-stub:1.2.0'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.0.2"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.2.0'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

startScripts.enabled = false


task botClient(type: CreateStartScripts) {
  mainClassName = 'org.monolith.bot.BotClient'
  applicationName = 'bot-client'
  outputDir = new File(project.buildDir, 'tmp')
  classpath = jar.outputs.files + project.configurations.runtime
}

task botServer(type: CreateStartScripts) {
  mainClassName = 'org.monolith.bot.BotServer'
  applicationName = 'bot-server'
  outputDir = new File(project.buildDir, 'tmp')
  classpath = jar.outputs.files + project.configurations.runtime
}


applicationDistribution.into('bin') {
  from(botClient)
  from(botServer)
  fileMode = 0755
}
